{"map":"{\"version\":3,\"sources\":[\"js/Code-vue.60d3f3df.js\"],\"names\":[\"window\",\"push\",\"15d1\",\"module\",\"exports\",\"__webpack_require__\",\"3e81\",\"__webpack_exports__\",\"r\",\"render\",\"_vm\",\"this\",\"_c\",\"_self\",\"_v\",\"staticClass\",\"directives\",\"name\",\"rawName\",\"value\",\"expression\",\"attrs\",\"type\",\"placeholder\",\"domProps\",\"on\",\"input\",\"$event\",\"target\",\"composing\",\"searchQuery\",\"change\",\"$$selectedVal\",\"Array\",\"prototype\",\"filter\",\"call\",\"options\",\"o\",\"selected\",\"map\",\"val\",\"_value\",\"selectedTag\",\"multiple\",\"filterItems\",\"_l\",\"tag\",\"_s\",\"item\",\"index\",\"key\",\"tags\",\"join\",\"href\",\"url\",\"duration\",\"enter\",\"leave\",\"mode\",\"description\",\"_e\",\"click\",\"toggleExpanded\",\"buttonText\",\"staticRenderFns\",\"Codevue_type_script_lang_js_\",\"[object Object]\",\"expanded\",\"items\",\"computed\",\"withButtons\",\"toLowerCase\",\"includes\",\"sites\",\"methods\",\"itemToFind\",\"find\",\"dictionary\",\"views_Codevue_type_script_lang_js_\",\"componentNormalizer\",\"component\",\"Object\",\"bfe8\",\"dea9\",\"JSON\",\"parse\"],\"mappings\":\"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\"}","code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[\"Code-vue\"],{\"15d1\":function(e,t,a){},\"3e81\":function(e,t,a){\"use strict\";a.r(t);var o=function(){var e=this,t=e._self._c;return t(\"div\",[t(\"h1\",[e._v(\"Code NLP Items\")]),t(\"div\",{staticClass:\"filters\"},[t(\"label\",[e._v(\"\\n       Search Your Item\\n    \"),t(\"input\",{directives:[{name:\"model\",rawName:\"v-model\",value:e.searchQuery,expression:\"searchQuery\"}],attrs:{type:\"text\",placeholder:\"Search items\"},domProps:{value:e.searchQuery},on:{input:function(t){t.target.composing||(e.searchQuery=t.target.value)}}})]),t(\"br\"),t(\"label\",[e._v(\"\\n      Filter by tag:\\n      \"),t(\"select\",{directives:[{name:\"model\",rawName:\"v-model\",value:e.selectedTag,expression:\"selectedTag\"}],on:{change:[function(t){var a=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t=\"_value\"in e?e._value:e.value;return t}));e.selectedTag=t.target.multiple?a:a[0]},e.filterItems]}},[t(\"option\",{attrs:{value:\"all\"}},[e._v(\"All\")]),e._l(e.tags,(function(a){return t(\"option\",{domProps:{value:a}},[e._v(e._s(a))])}))],2)]),t(\"br\")]),t(\"div\",{staticClass:\"items-section\"},e._l(e.itemsToDisplay,(function(a,o){return t(\"div\",{key:a.name,staticClass:\"item\"},[t(\"h3\",{staticClass:\"item-name\"},[e._v(e._s(a.name))]),t(\"p\",[e._v(e._s(a.tags.join(\", \")))]),t(\"a\",{staticClass:\"linkToRef\",attrs:{href:a.url,target:\"_blank\"}},[e._v(\"Link to source\")]),t(\"br\"),t(\"br\"),t(\"div\",[t(\"transition\",{attrs:{duration:{enter:800,leave:100},name:\"fade\",mode:\"out-in\"}},[a.expanded?t(\"div\",{staticClass:\"expandable\"},[e._v(\"\\n            \"+e._s(a.description)+\"\\n            \"),t(\"br\"),t(\"br\")]):e._e()]),t(\"button\",{staticClass:\"expand-button\",on:{click:function(t){return e.toggleExpanded(a.name)}}},[e._v(e._s(a.buttonText))])],1)])})),0)])},i=[],n={data(){return{searchQuery:\"\",expanded:!1,items:[],tags:[\"Tokenization\",\"Morphological and Syntactic Analysis\",\"Diacritization / Nikkud / Vocalization\",\"Models\",\"Code Other\",\"Commercial services\"],selectedTag:\"all\"}},computed:{itemsToDisplay(){let e=this.items.map(e=>({...e,buttonText:e.expanded?\"Collapse\":\"Expand\"}));return e=e.filter(e=>e.name.toLowerCase().includes(this.searchQuery.toLowerCase())),\"all\"===this.selectedTag?e:e.filter(e=>e.tags.includes(this.selectedTag))}},beforeMount(){let e=a(\"dea9\").map(e=>({...e,expanded:!1}));this.items=e},methods:{filterItems(){},toggleExpanded(e){const t=this.items.find(t=>t.name===e);t.expanded=!t.expanded}}},r=n,s=(a(\"bfe8\"),a(\"2877\")),l=Object(s[\"a\"])(r,o,i,!1,null,null,null);t[\"default\"]=l.exports},bfe8:function(e,t,a){\"use strict\";a(\"15d1\")},dea9:function(e){e.exports=JSON.parse('[{\"name\":\"awesome-hebrew-nlp iddo berger\",\"tags\":[\"Code\"],\"description\":\"More NLP awesome stuff by iddo berger\",\"url\":\"https://github.com/iddoberger/awesome-hebrew-nlp\"},{\"name\":\"Yonti Levin\\'s Hebrew Tokenizer\",\"tags\":[\"Code\",\"Tokenization\"],\"description\":\"python\",\"url\":\"https://github.com/YontiLevin/Hebrew-Tokenizer\"},{\"name\":\"Hebrew Tokenizer\",\"tags\":[\"Code\",\"\",\"Tokenization\"],\"description\":\" Eyal Gruss\\'s Hebrew tokenizer. A field-tested Hebrew tokenizer for dirty texts (ben-yehuda project, bible, cc100, mc4, opensubs, oscar, twitter) focused on multi-word expression extraction.\",\"url\":\"https://github.com/eyaler/hebrew_tokenizer?fbclid=IwAR1vbBpU9SOzQ71ZaxAjyBwNVuyhuYs3dMQsAUlZXCINy4TSg2BVWvoBARc\"},{\"name\":\"Morphological and Syntactic Analysis of Hebrew Texts by ONLP\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"\",\"url\":\"https://nlp.biu.ac.il/~rtsarfaty/onlp/hebrew/\"},{\"name\":\"yap morpho-syntactic parser\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"Morphological Analysis, disambiguation and dependency Parser. Morphological Analyzer relies on the BGU Lexicon. [`original repository <http://github.com/habeanf/yap>`_]\",\"url\":\"https://github.com/OnlpLab/yap\"},{\"name\":\"The MILA Morphological Analysis Tool\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"Takes as input undotted Hebrew text (formatted either as plain text or as tokenized XML following MILA\\'s standards). The Analyzer then returns, for each token, all the possible morphological analyses of the token, reflecting part of speech, transliteration, gender, number, definiteness, and possessive suffix. Free for non-commercial use. \",\"url\":\"http://www.mila.cs.technion.ac.il/tools_analysis.html\"},{\"name\":\"The MILA Morphological Disambiguation Tool\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"Takes as input morphologically-analyzed text and uses a Hidden Markov Model (HMM) to assign scores for each analysis, considering contextual information from the rest of the sentence. For a given token, all analyses deemed impossible are given scores of 0; all n analyses deemed possible are given positive scores. Free for non-commercial use.\",\"url\":\"http://www.mila.cs.technion.ac.il/tools_disambiguation.html\"},{\"name\":\"Hspell\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"Free Hebrew linguistic project including spell checker and  morphological analyzer.\",\"url\":\"http://hspell.ivrix.org.il/\"},{\"name\":\"HspellPy\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"Python wrapper for hspell.\",\"url\":\"https://github.com/eranroz/HspellPy/\"},{\"name\":\"BGU Tagger: Morphological Tagging of Hebrew\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"Morphological Analysis, Disambiguation.\",\"url\":\"https://www.cs.bgu.ac.il/~elhadad/nlp12/hebrew/TagHebrew.html\"},{\"name\":\"RFTokenizer\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"A highly accurate morphological segmenter to break up complex word forms\",\"url\":\"https://github.com/amir-zeldes/RFTokenizer\"},{\"name\":\"HebPipe\",\"tags\":[\"Code\",\"Morphological and Syntactic Analysis\"],\"description\":\"End-to-end pipeline for Hebrew NLP using off the shelf tools, including morphological analysis, tagging, lemmatization, parsing and more\",\"url\":\"https://github.com/amir-zeldes/HebPipe\"},{\"name\":\"Nakdan\",\"tags\":[\"Code\",\"Diacritization / Nikkud / Vocalization\"],\"description\":\"(`Paper <https://aclanthology.org/2020.acl-demos.23.pdf>`_) - Tool for Automatic and semi-automatic Nikud for Hebrew texts. Avi Shmidman, Shaltiel Shmidman, Moshe Koppel, and Yoav Goldberg. 2020. Nakdan: Professional Hebrew diacritizer. In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics: System Demonstrations, pages 197–203, Online. Association for Computational Linguistics.\",\"url\":\"https://nakdan.dicta.org.il/\"},{\"name\":\"Nakdimon\",\"tags\":[\"Code\",\"Diacritization / Nikkud / Vocalization\"],\"description\":\"Hebrew diacritizer. Elazar Gershuni and Yuval Pinter: Restoring Hebrew Diacritics Without a Dictionary. `Demo in Replicate <https://replicate.com/elazarg/nakdimon/>`_.\",\"url\":\"https://www.nakdimon.org/\"},{\"name\":\"UNIKUD\",\"tags\":[\"Code\",\"Diacritization / Nikkud / Vocalization\"],\"description\":\" Morris Alper\\'s open-source tool for adding vowel signs (Nikud) to Hebrew text, uses no rule-based logic, built with a CANINE transformer network. An interactive demo is available at `Huggingface Spaces <https://huggingface.co/spaces/malper/unikud>`_. Blog post: `UNIKUD: Adding Vowels to Hebrew Text with Deep Learning <https://towardsdatascience.com/unikud-adding-vowels-to-hebrew-text-with-deep-learning-powered-by-dagshub-56d238e22d3f>`_.\",\"url\":\"https://dagshub.com/morrisalp/unikud\"},{\"name\":\"AlephBERT\",\"tags\":[\"Code\",\"Models\",\"Masked Language Models (MLM)\"],\"description\":\"a large pre-trained language model for Modern Hebrew, publicly available, pre-training on Oscar, Texts of Hebrew tweets, all of Hebrew Wikipedia, published by the OnlpLab team. This model obtains stateof-the- art results on the tasks of segmentation, Part of Speech Tagging, Named Entity Recognition, and Sentiment Analysis. Github: https://github.com/OnlpLab/AlephBERT\",\"url\":\"https://huggingface.co/onlplab/alephbert-base?fbclid=IwAR3gP64XJEDvRcJ9UQm2DIttOnv7Y-6I5R-t7djj9TTTsXlcIA8qyx8PzSQ\"},{\"name\":\"AlephBERTGimmel\",\"tags\":[\"Code\",\"Models\",\"Masked Language Models (MLM)\"],\"description\":\"a new Hebrew pre-trained language model, trained on the same dataset as the previous SOTA Hebrew PLM AlephBERT, consisting od approximiately 2 billion words of text but with a substantially increased vocabulary of 128,000 word pieces. Published as a collaboration of the OnlpLab team and Dicta. Github: https://github.com/Dicta-Israel-Center-for-Text-Analysis/alephbertgimmel\",\"url\":\"https://arxiv.org/pdf/2211.15199.pdf\"},{\"name\":\"HeBERT\",\"tags\":[\"Code\",\"Models\",\"Masked Language Models (MLM)\",\"Sentiment\"],\"description\":\"HeBERT is a Hebrew pretrained language model for Polarity Analysis and Emotion Recognition, published by Dr. Inbal Yahav Shenberger and Avichay Chriqui. It is based on Google\\'s BERT architecture and it is BERT-Base config. HeBert was trained on three dataset: OSCAR, A Hebrew dump of Wikipedia, Emotion User Generated Content (UGC) data that was collected for the purpose of this study. The model was evaluated on downstream tasks: `HebEMO - emotion recognition model <https://huggingface.co/avichr/hebEMO_anticipation?fbclid=IwAR00bGmLoASpEjpCOoWjuZ6q4xhlu6wwZR4Miau2RV2nVsam-o7oVt4jYkY>`_ and `sentiment analysis <https://huggingface.co/avichr/heBERT_sentiment_analysis?fbclid=IwAR1IhvCmosiapbA3iosHc0nJHM6nM-0m7Ew3Zeqw2V4wg-3cWKuB_Qf8OuY>`_. Github: https://github.com/avichaychriqui/HeBERT\",\"url\":\"https://huggingface.co/avichr/heBERT?fbclid=IwAR2Lo9pkN5HLZmtFiFwcIDWyXR9gyP646pyFzNSUUP_djalAkewvB9p8E_o\"},{\"name\":\"TavBERT\",\"tags\":[\"Code\",\"Models\",\"Masked Language Models (MLM)\"],\"description\":\"a BERT-style masked language model over character sequences, published by Omri Keren, Tal Avinari, Prof. Reut Tsarfaty and Dr. Omer Levy.\",\"url\":\"https://github.com/omrikeren/TavBERT\"},{\"name\":\"hebrew-gpt_neo-small\",\"tags\":[\"Code\",\"Models\",\"Causal Language Models (CLM)\"],\"description\":\"Doron Adler\\'s Hebrew text generation model based on EleutherAI\\'s gpt-neo.\",\"url\":\"https://huggingface.co/Norod78/hebrew-gpt_neo-small\"},{\"name\":\"BERT\\'s multilingual model\",\"tags\":[\"Code\",\"Models\",\"Multilingual Models\"],\"description\":\"Trained (also) on Hebrew.\",\"url\":\"https://github.com/google-research/bert/blob/master/multilingual.md\"},{\"name\":\"Universal Language Model Fine-tuning for Text Classification (ULMFiT) in Hebrew\",\"tags\":[\"Code\",\"Models\",\"Multilingual Models\"],\"description\":\"The weights (e.g. a trained model) for a Hebrew version for  Howard\\'s and Ruder\\'s ULMFiT model. Trained on the Hebrew Wikipedia corpus.\",\"url\":\"https://github.com/hanan9m/hebrew_ULMFiT?fbclid=IwAR0wJkoxmaCmhuZnSVOLBo1Mo362v6-66PmXutOr9FhhoItIHoqG_2MzV8E\"},{\"name\":\"Neural Sentiment Analyzer for Modern Hebrew\",\"tags\":[\"Code\",\"Models\",\"Sentiment\"],\"description\":\"This code and dataset provide an established benchmark for neural sentiment analysis for Modern Hebrew.\",\"url\":\"https://github.com/omilab/Neural-Sentiment-Analyzer-for-Modern-Hebrew\"},{\"name\":\"Neural Modeling for Named Entities and Morphology (NEMO2)\",\"tags\":[\"Code\",\"Models\",\"NER\"],\"description\":\"OnlpLab\\'s code and models for neural modeling of Hebrew NER. Described in the TACL paper `Neural Modeling for Named Entities and Morphology (NEMO2) <https://direct.mit.edu/tacl/article/doi/10.1162/tacl_a_00404/107206/Neural-Modeling-for-Named-Entities-and-Morphology>`_.\",\"url\":\"https://github.com/OnlpLab/NEMO\"},{\"name\":\"MDTEL\",\"tags\":[\"Code\",\"Models\",\"NER\"],\"description\":\"Yonatan Bitton\\'s code that recognize medical entities in a Hebrew text.\",\"url\":\"https://github.com/yonatanbitton/mdtel?fbclid=IwAR3Npi5lG4hGy1dcQwdr2RWuEFUArjmQ_bo3FXQ9KhYZUpK5OO67-aT-e5k\"},{\"name\":\"HebSpacy\",\"tags\":[\"Code\",\"Models\",\"NER\"],\"description\":\"A custom spaCy pipeline for Hebrew text including a transformer-based multitask NER model that recognizes 16 entity types in Hebrew, including GPE, PER, LOC and ORG.\",\"url\":\"https://github.com/8400TheHealthNetwork/HebSpacy\"},{\"name\":\"Legal-HeBERT\",\"tags\":[\"Code\",\"Models\",\"Other Deep Learning Tools\"],\"description\":\"a BERT model for Hebrew legal and legislative domains. It is intended to improve the legal NLP research and tools development in Hebrew. Avichay Chriqui, Dr. Inbal Yahav Shenberger and Dr. Ittai Bar-Siman-Tov release two versions of Legal-HeBERT: `The first version <https://huggingface.co/avichr/Legal-heBERT_ft?fbclid=IwAR3K16AoiBYtZlpf2C6TjSstOv7ZuaWLIwCOq93_fRV6bGA3ssDA8NfuHmY>`_ is a fine-tuned model of HeBERT applied on legal and legislative documents. `The second version <https://huggingface.co/avichr/Legal-heBERT?fbclid=IwAR3r-QUCMSdzCoAjomifrk2hCPX7kvGJk47raHHfqBI511QXXchaOkL8rFo>`_ uses HeBERT\\'s architecture guidlines to train a BERT model from scratch.\",\"url\":\"https://github.com/avichaychriqui/Legal-HeBERT?fbclid=IwAR3sFizNJEfPIXm0Agg5HpELUm49v11kfksjes72-Q-9CxMwv8hdR8I5ahg\"},{\"name\":\"BEREL\",\"tags\":[\"Code\",\"Models\",\"Other Deep Learning Tools\"],\"description\":\"BERT Embeddings for Rabbinic-Encoded Language - DICTA\\'s pre-trained language model (PLM) for Rabbinic Hebrew.\",\"url\":\"https://www.dropbox.com/sh/us98wjb178itjk1/AACWu62ffHJ0zk19i77_rV06a?dl=0&fbclid=IwAR0GbzbyASH8bA_lCadXA-2l09oXtg_NNm4QTQ69WDfdtG77gWx9WufB_II\"},{\"name\":\"Verb Inflector\",\"tags\":[\"Code\",\"Code Other\"],\"description\":\"A generation mechanism, created as part of Eran Tomer\\'s (erantom@gmail.com) Master thesis, which produces vocalized and morphologically tagged Hebrew verbs given a non-vocalized verb in base-form and an indication of which pattern the verb follows.\",\"url\":\"https://github.com/NLPH/NLPH_Resources/tree/master/code/VerbInflector\"},{\"name\":\"HebMorph\",\"tags\":[\"Code\",\"Code Other\"],\"description\":\"An open-source effort to make Hebrew properly searchable by various IR software libraries. Includes Hebrew Analyzer for Lucene.\",\"url\":\"https://github.com/synhershko/HebMorph\"},{\"name\":\"Hebrew OCR with Nikud\",\"tags\":[\"Code\",\"Code Other\"],\"description\":\"A program to convert Hebrew text files (without Nikud) to text files with the correct Nikud. Developed by Adi Oz and Vered Shani.\",\"url\":\"https://www.cs.bgu.ac.il/~elhadad/hocr/\"},{\"name\":\"Text-Fabric\",\"tags\":[\"Code\",\"Code Other\"],\"description\":\" A Python package for browsing and processing ancient corpora, focused on the Hebrew Bible Database.\",\"url\":\"https://dans-labs.github.io/text-fabric/\"},{\"name\":\"The Automatic Hebrew Transcriber\",\"tags\":[\"Code\",\"Code Other\"],\"description\":\"Automatically transcribes text from Hebrew audio and video files.\",\"url\":\"http://hebrew-transcriber.online/\"},{\"name\":\"word2word\",\"tags\":[\"Code\",\"Code Other\"],\"description\":\"Easy-to-use word-to-word translations for 3,564 language pairs. Hebrew is one of the 62 supported language, and thus word-to-word translation to/from Hebrew is supported for 61 languages.\",\"url\":\"https://github.com/Kyubyong/word2word\"},{\"name\":\"SPMRL\",\"tags\":[\"Code\",\"Code Other\"],\"description\":\"converts YAP\\'s output from the SPMRL scheme to UD v2.\",\"url\":\"https://github.com/shovalsa/SPMRL-to-UD\"},{\"name\":\"Eyfo\",\"tags\":[\"Code\",\"Commercial services\"],\"description\":\"A commercial engine for search and entity tagging in Hebrew.\",\"url\":\"https://ey.fo/search\"},{\"name\":\"Melingo\\'s ICA (Intelligent Content Analysis)\",\"tags\":[\"Code\",\"Commercial services\"],\"description\":\"A text analysis and textual categorized entity extraction API for Hebrew, Arabic and Farsi texts.\",\"url\":\"https://melingo.com/text-analysis/morfix_insights/\"},{\"name\":\"Genius\",\"tags\":[\"Code\",\"Commercial services\"],\"description\":\"Automatic analysis of free text in Hebrew.\",\"url\":\"https://www.genius.co.il\"},{\"name\":\"AlmaReader\",\"tags\":[\"Code\",\"Commercial services\"],\"description\":\"Online text-to-speech service for Hebrew.\",\"url\":\"https://app.almareader.com/\"}]')}}]);","extractedComments":[]}